#|===============|
#| ガウスの消去法 |
#|===============|
import numpy as np

#初期条件==============================================================
#問題配列
A = np.array([[1,2,0,-1],
			[3,7,-1,3],
			[2,2,1,2]],dtype = np.float64)
print("A = \n",A,"\n")

#回答用配列
x = [[] for i in range(len(A))]

#前進消去==============================================================
for i in range(len(A)):
	#ピボットを最大値にする
	tmp = np.argmax(np.abs(A[i:,i]))+i
	#コピーを取ることで参照渡し回避(左辺と右辺のA[i]が違うオブジェクトならOK)
	A[i] , A[tmp] = A[tmp] , np.copy(A[i])
	#1をかけても回避可能
	#A[i] , A[tmp] = A[tmp] , A[i]*1
	for j in range(i+1,len(A)):
		A[j] = A[j]-A[i]*(A[j,i]/A[i,i])

#後退消去==============================================================
for i in range(len(A))[::-1]:
	A[i] = A[i] / A[i,i]
	for j in range(i)[::-1]:
		A[j] = A[j] - A[i]*A[j,i]
print("A = \n",A,"\n")

#回答表示==============================================================
for i in range(len(A)):
	print(f"x{i} = {A[i,-1]}")